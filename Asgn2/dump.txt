# add     $t3,            $s1,        $t2         # $t3 = &arr + j
# lw      $t4,            0($t3)                  # t4 = arr[j]

# li      $v0,            4
# la      $a0,            intj
# syscall
# li      $v0,            1
# la      $a0,            ($t2)
# syscall
# li      $v0,            4
# la      $a0,            nl
# syscall

# add     $t2,            $t2,        1           # j = j + 1
# mul     $t3,            $t2,        4           # $t3 = 4 * j [offset in bits]
# add     $t3,            $s1,        $t3         # $t3 = &arr + (j+1)
# lw      $t5,            0($t3)                  # t5 = arr[j+1]



# Print I
    # li      $v0,            4
    # la      $a0,            inti
    # syscall 
    # li      $v0,            1
    # la      $a0,            ($t1)
    # syscall 
    # li      $v0,            4
    # la      $a0,            nl
    # syscall 


# Print J
    li      $v0,            4
    la      $a0,            intj
    syscall 
    li      $v0,            1
    la      $a0,            ($t2,       )
    syscall 
    li      $v0,            4
    la      $a0,            nl
    syscall 
